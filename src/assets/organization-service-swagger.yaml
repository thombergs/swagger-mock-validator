swagger: '2.0'
info:
  description: 'Service zum Zugriff auf die Organisationsstruktur.'
  version: 1.0.0
  title: organization-service
externalDocs:
  description: Zu Gitlab
  url: 'http://git.remondis-de.local/renew/organization-service'
basePath: /api/
tags:
  - name: branches
    description: 'Verwaltung von Niederlassungen.'
  - name: companies
    description: 'Verwaltung von Firmen.'
schemes:
  - http
paths:
  '/branches':
    get:
      tags:
        - branches
      summary: 'Zugriff auf Niederlassungen'
      description: 'Stellt eine Liste aller Niederlassungen zur Verfügung.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "page"
          in: "query"
          description: "Seitennummer (0-basiert)"
          required: false
          type: "integer"
          format: "int64"
        - name: "size"
          in: "query"
          description: "Anzahl der Ergebnisse, die angezeigt werden sollen."
          required: false
          type: "integer"
          format: "int64"
        - name: "sort"
          in: "query"
          description: "Reihenfolge der Ergebnisse, per Spaltenname. Kann jeweils pro Datenbank-Spalte angegeben werden: z.B. sort=name,asc&sort=id,desc"
          pattern: "[a-zA-Z]+(,asc|,desc)?"
          required: false
          type: "string"
      responses:
        '200':
          description: '(OK) Array der zur Verfügung stehenden Niederlassungen. Gibt ein leeres Array zurück wenn keine Daten zur Verfügung stehen.'
          schema:
            $ref: '#/definitions/BranchesPage'
    post:
      tags:
        - branches
      summary: 'Erstellen einer neuen Niederlassung'
      description: 'Ermöglicht das Erstellen einer neuen Niederlassung innerhalb der Organisationsstruktur. Eine Referenz auf die neu angelegte Niederlassung wird zurückgegeben. Eine Niederlassung benötigt die Referenz auf eine Firma. Es muss also sichergestellt werden, dass die referenzierte Firma existiert. Eine ggf. gesetzte ID für die Niederlassung wird ignoriert und neu vergeben.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: branch
          description: 'Niederlassungsdaten die gespeichert werden sollen.'
          required: true
          schema:
            $ref: '#/definitions/Branch'
      responses:
        '201':
          description: '(CREATED) Niederlassung wurde erfolgreich erstellt.'
          schema:
            $ref: '#/definitions/IdObject'
        '400':
          description: '(BAD REQUEST) Die übergebenen Daten entsprechen nicht dem erwarteten Schema.'
          schema:
            $ref: '#/definitions/Error'
  '/branches/{id}':
    get:
      tags:
        - branches
      summary: 'Zugriff auf eine Niederlassung'
      description: 'Stellt eine Niederlassung zur Verfügung.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idParam'
      responses:
        '200':
          description: '(OK) Gefundene Niederlassung wird bereitgestellt.'
          schema:
              $ref: '#/definitions/Branch'
        '404':
          description: '(NOT FOUND) Für die übergebene ID existiert keine Niederlassung.'
    put:
      tags:
        - branches
      summary: 'Ändern einer bestehenden Niederlassung'
      description: 'Ermöglicht die Bearbeitung einer bestehenden Niederlassung. Es ist notwendig, dass die vollständigen Daten der Niederlassung bei einer Änderung übertragen werden - also auch nicht veränderte Parameter. Die ID im Datenmodel wird ignoriert - die im Pfad angegebene ID ist maßgeblich.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idParam'
        - in: body
          name: branch
          description: 'Niederlassungsdaten, die geändert werden sollen.'
          required: true
          schema:
            $ref: '#/definitions/Branch'
      responses:
        '204':
          description: '(NO CONTENT) Die Niederlassung wurde erfolgreich geändert und gespeichert.'
        '400':
          description: '(BAD REQUEST) Die übergebenen Daten entsprechen nicht dem erwarteten Schema.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: '(NOT FOUND) Für die übergebene ID existiert keine Niederlassung.'
  '/companies':
    get:
      tags:
        - companies
      summary: 'Zugriff auf Firmen'
      description: 'Stelle eine Liste aller Firmen zur Verfügung.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "page"
          in: "query"
          description: "Seitennummer (0-basiert)"
          required: false
          type: "integer"
          format: "int64"
        - name: "size"
          in: "query"
          description: "Anzahl der Ergebnisse, die angezeigt werden sollen."
          required: false
          type: "integer"
          format: "int64"
        - name: "sort"
          in: "query"
          description: "Reihenfolge der Ergebnisse, per Spaltenname. Kann jeweils pro Datenbank-Spalte angegeben werden: z.B. sort=name,asc&sort=id,desc"
          pattern: "[a-zA-Z]+(,asc|,desc)?"
          required: false
          type: "string"
      responses:
        '200':
          description: '(OK) Array mit den zur Verfügung stehenden Firmen. Gibt ein leeres Array zurück wenn keine Daten vorhanden sind.'
          schema:
            type: array
            items:
              $ref: '#/definitions/CompaniesPage'
    post:
      tags:
        - companies
      summary: 'Erstellen neuer Firmen'
      description: 'Ermöglicht das Erstellen einer neue Firma innerhalb der Organisationsstruktur. Eine Referenz auf die neu angelegte Firma wird zurückgegeben. Eine ggf. gesetzte ID für die Firma wird ignoriert und neu vergeben.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: company
          description: 'Firmendaten, die gespeichert werden sollen. Eine gesetzte ID für die Firma wird ignoriert und neu vergeben.'
          required: true
          schema:
            $ref: '#/definitions/Company'
      responses:
        '201':
          description: '(CREATED) Firma wurde erfolgreich erstellt.'
          schema:
            $ref: '#/definitions/IdObject'
        '400':
          description: '(BAD REQUEST) Die übergebenen Daten entsprechen nicht dem erwarteten Schema oder es tritt ein Validierungsfehler auf.'
          schema:
            $ref: '#/definitions/Error'
  '/companies/{id}':
    get:
      tags:
        - companies
      summary: 'Zugriff auf eine Firma'
      description: 'Stellt eine Firma zur Verfügung.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idParam'
      responses:
        '200':
          description: '(OK) Gefundene Firma wird bereitgestellt.'
          schema:
              $ref: '#/definitions/Company'
        '404':
          description: '(NOT FOUND) Für die übergebene ID existiert keine Firma.'
    put:
      tags:
        - companies
      summary: 'Ändern einer bestehenden Firma'
      description: 'Ermöglicht das Bearbeiten einer neue Firma. Es ist notwendig, dass die vollständigen Daten der Niederlassung bei einer Änderung übertragen werden - also auch nicht veränderte Parameter. Die ID im Datenmodel wird ignoriert - die im Pfad angegebene ID ist maßgeblich.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idParam'
        - in: body
          name: company
          description: 'Firmendaten, die geändert werden sollen.'
          required: true
          schema:
            $ref: '#/definitions/Company'
      responses:
        '204':
          description: '(NO CONTENT) Die Firma wurde erfolgreich geändert und gespeichert.'
        '400':
          description: '(BAD REQUEST) Die übergebenen Daten entsprechen nicht dem erwarteten Schema oder es tritt ein Validierungsfehler auf.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: '(NOT FOUND) Für die übergebene ID existiert keine Firma.'
definitions:
  id:
    description: 'Identifier einer Ressource'
    example: 100001
    type: integer
    format: int64
    minimum: 0
    uniqueItems: true
  IdObject:
    type: object
    description: "Rückgabewert beim Erstellen einer neuen Ressource."
    required:
      - id
    properties:
      id:
        $ref: '#/definitions/id'
  Company:
    type: object
    required:
      - companyNumber
      - name
      - address
    properties:
      id:
        $ref: '#/definitions/id'
      companyNumber:
        description: 'Fachliche Kennzahl einer Firma'
        example: 123456
        type: integer
        format: int32
        maximum: 999999
        minimum: 0
        uniqueItems: true
      name:
        description: 'Name der Firma'
        type: string
        maxLength: 200
      address:
        $ref: '#/definitions/Address'
  Branch:
    type: object
    required:
      - name
      - companyId
      - address
    properties:
      id:
        $ref: '#/definitions/id'
      name:
        description: 'Name der Niederlassung'
        example: 'Lüntec - ReNew Projektbüro'
        type: string
        maxLength: 200
      companyId:
        description: 'Referenz auf eine Firma'
        example: 100001
        type: integer
        format: int64
        minimum: 0
      companyName:
        description: 'Name eine Firma'
        example: 'REMONDIS IT Services Gmbh & Co. KG'
        type: string
        maxLength: 200
      address:
        $ref: '#/definitions/Address'
  Address:
    type: object
    required:
      - houseNumber
      - street
      - city
      - countryCode
      - zipCode
    properties:
      houseNumber:
        description: 'Hausnummer; kann auch aus Zeichen bestehen, wie z.B. in ''10A'''
        type: string
        maxLength: 30
        example: '138'
      street:
        description: 'Straße der Adresse exklusive Hausnummer'
        type: string
        maxLength: 70
        example: 'Brunnenstraße'
      city:
        description: 'Ort der Adresse'
        type: string
        maxLength: 60
        example: 'Lünen'
      zipCode:
        description: 'Postleitzahl des Orts'
        type: string
        example: '44536'
        maxLength: 10
      countryCode:
        description: 'Länderkennzeichen nach ISO-3166 Alpha-2'
        type: string
        pattern: '^[A-Z]{2}$'
        maxLength: 2
        minLength: 2
        example: DE
  Page:
    type: object
    description: 'Ergebnisseite einer paginierten Anfrage'
    properties:
      number:
        type: number
        description: 'Die laufende Nummer der gelieferten Seite (0-basiert)'
        example: 3
      totalPages:
        type: number
        description: 'Anzahl verfügbarer Seiten'
        example: 3
      size:
        type: number
        description: 'Die Anzahl Elemente pro Seite'
        example: 10
      totalElements:
        type: number
        description: 'Die Anzahl der verfügbarer Elemente'
      numberOfElements:
        type: number
        description: 'Die konkrete Anzahl Elemente auf dieser Seite (kann von "size" abweichen, z.B. auf der letzten Seite).'
        example: 5
      last:
        type: boolean
        description: '"true", wenn es sich um die letzte Seite handelt'
        example: true
      first:
        type: boolean
        description: '"true", wenn es sich um die erste Seite handelt'
        example: false
  BranchesPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/Branch'
  CompaniesPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/Company'
  Error:
    type: object
    description: 'Fehlerinformationen im Falle eines aufgetretenen Fehlers'
    properties:
      errorCode:
        type: string
        description: 'Code des aufgetretenen Fehlers'
        example: 'ValidationError'
      tracing:
        type: object
        properties:
          traceId:
            type: string
            description: 'Korrelations-ID, über die dieser Fehler z.B. mit Log-Einträgen korreliert werden kann (eine Erläuterung des Begriffs "trace" ist dem Reference Manual von Spring Cloud Sleuth zu entnehmen)'
            example: '71ff6e8b547ea055'
          rootCauseSpanId:
            type: string
            description: 'ID des Spans, in dem der Fehler ursprünglich aufgetreten ist (eine Erläuterung des Begriffs "span" ist dem Reference Manual von Spring Cloud Sleuth zu entnehmen)'
            example: '71ff6e8b547ea055'
      validationErrors:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
              description: 'Name des Feldes, dessen Validierung fehlgeschlagen ist'
              example: 'username'
            errorCode:
              type: string
              description: 'Code der Validierung, die fehlgeschlagen ist'
              example: 'NotNull'
parameters:
  idParam:
    name: id
    in: path
    description: 'Identifier der Ressource'
    required: true
    type: integer
    format: int64
    minimum: 0
